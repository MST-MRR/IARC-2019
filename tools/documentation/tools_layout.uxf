<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>370</x>
      <y>150</y>
      <w>290</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>lw=2
Data Splitter
-
Serve as interface for outputting drone data.

Parameters
-
logger_desired_ headers = [ ] 
use_rtg = bool  
version = 2 / 3(default=2) Python v for rtg

Functions
-
tools_active: Returns active tools
send({header : data}): Send data to tools
exit(): Safely exit all tools</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>20</x>
      <y>240</y>
      <w>230</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>lw=2
Logger
-
Saves data to file.

Parameters
-
headers_to_log = []  List of data-
                            stream headers.

Functions
-
update({header : data}): Log data
exit(): Safely exit logger</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>760</x>
      <y>200</y>
      <w>320</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>lw=2
Inter-process
Communication
-
Create RTG &amp; setup cache in subprocess.

Parameters
-
version = 2/3 Python v to create subprorcess in
reader = bool  Use stdout reader?
thread_stop = threading.event()

Functions
-
send(data): Sends data to subprocess
alive: Whether or not subprocess is running
quit(): Exit IPC</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>760</x>
      <y>710</y>
      <w>320</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lw=2
Real-Time
Grapher
-
Plots data in real time.

Parameters
-
get_data = func()  Function to call to pull data

Functions
-
run(): Start matplot &amp; begin pulling &amp; plotting data.
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>550</x>
      <y>60</y>
      <w>120</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
Data-streams
</panel_attributes>
    <additional_attributes>20.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>120</x>
      <y>160</y>
      <w>270</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=Data-streams if logger_headers</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0;250.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>650</x>
      <y>160</y>
      <w>350</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=Data-streams</panel_attributes>
    <additional_attributes>250.0;40.0;250.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>890</x>
      <y>640</y>
      <w>110</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=Data-streams</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>420</x>
      <y>10</y>
      <w>200</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=.
Flight Code</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>800</x>
      <y>0</y>
      <w>240</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=.
Possible Data-Streams
-
Possible data streams w/
identifiers for specific drones.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>120</x>
      <y>420</y>
      <w>160</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
Filtered data-streams</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>760</x>
      <y>490</y>
      <w>320</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lw=2
Cache
-
Creates RTG and caches data from stdin for it.

Parameters
-
data = {}  Last received data

Functions
-
start(): Start rtg and begin reading input</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>850</x>
      <y>420</y>
      <w>100</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=Data-streams</panel_attributes>
    <additional_attributes>20.0;70.0;20.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>0</x>
      <y>30</y>
      <w>260</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
Continuously send</panel_attributes>
    <additional_attributes>240.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>10</x>
      <y>0</y>
      <w>230</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Key
-</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>0</x>
      <y>70</y>
      <w>260</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
Send on start</panel_attributes>
    <additional_attributes>240.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>240</x>
      <y>270</y>
      <w>150</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
logger_headers</panel_attributes>
    <additional_attributes>10.0;20.0;130.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>770</x>
      <y>430</y>
      <w>100</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
Start signal</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>650</x>
      <y>250</y>
      <w>130</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
Start signal
version
if use_rtg</panel_attributes>
    <additional_attributes>110.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>50</y>
      <w>130</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
Logger headers
use_rtg
version</panel_attributes>
    <additional_attributes>10.0;100.0;20.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1070</x>
      <y>780</y>
      <w>90</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1140</x>
      <y>770</y>
      <w>120</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>Config file(xml)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>70</x>
      <y>490</y>
      <w>120</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>Data file(csv)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>890</x>
      <y>430</y>
      <w>110</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=Data-streams</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1080</x>
      <y>200</y>
      <w>140</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Currently 3.6 broken</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
